<launch>
    <arg name="aws_voice_name" default="Kimberly"/>
    <arg name="face_port" default="8081"/>
    <arg name="gui_port" default="8082"/>
    <arg name="is_launch_sound_listener" default="true" />
    <arg name="is_record_audio" default="true" />
    <arg name="upload_directory" value="/root/upload" />

    <rosparam file="$(find ros_vision_interaction)/config/config.yaml" command="load"/>

    <!-- launch cordial -->
    <include file="$(find cordial_manager)/launch/manager.launch">
        <arg name="face_port" value="$(arg face_port)"/>
        <arg name="gui_port" value="$(arg gui_port)"/>
        <arg name="is_launch_sound_listener" default="$(arg is_launch_sound_listener)"/>
        <arg name="aws_voice_name" value="$(arg aws_voice_name)"/>
    </include>

    <!-- launch QT NUC -->
    <include file="$(find qt_robot_nuc)/launch/qt_robot_nuc.launch"/>

    <!-- relay gesture messages to QT robot -->
    <node pkg="topic_tools" type="relay" name="gesture_relay" args="/cordial/gesture/play /qt_robot/gesture/play" />

    <!-- launch data capture services -->
    <include file="$(find aws_uploader)/launch/aws_uploader.launch">
        <arg name="upload_directory_path" default="$(arg upload_directory)"/>
        <arg name="bucket_name" default="$(env AWS_BUCKET_NAME)"/>
    </include>
    <include file="$(find video_capture)/launch/capture.launch">
        <arg name="output_directory" value="$(arg upload_directory)"/>
        <arg name="image_topic" value="camera/color/image_raw"/>
        <arg name="is_record_topic" value="data_capture/is_record"/>
    </include>
    <include file="$(find audio_capture2)/launch/capture.launch">
        <arg name="output_directory" value="$(arg upload_directory)"/>
        <arg name="audio_topic" value="audio/audio"/>
        <arg name="is_record_topic" value="data_capture/is_record"/>
        <arg name="is_launch_audio_capture" value="true"/>
    </include>

    <!-- launch mongodb service -->
    <node pkg="ros_vision_interaction" type="launch_mongodb_server.sh" name="mongodb_server" output="screen"/>

    <!-- launch controllers -->
    <node pkg="ros_vision_interaction" type="ros_vision_project_delegator.py" name="vision_project_delegator" output="screen"/>
    <!--
    <node pkg="ros_vision_interaction" type="ros_behavior_controller.py" name="behavior_controller" output="screen"/>
    -->
</launch>